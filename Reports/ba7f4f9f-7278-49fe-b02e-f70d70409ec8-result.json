{"name": "test_printCarNamesAndPrices[firefox-Hyundai-Hyundaaaai Cars]", "status": "failed", "statusDetails": {"message": "AssertionError: Not on the correct page as title is not matching\nassert 'Hyundai Cars' == 'Hyundaaaai Cars'\n  - Hyundaaaai Cars\n  ?       ---\n  + Hyundai Cars", "trace": "self = <TestCases.test_carwale.Test_CarWale object at 0x000001C58FB284F0>\ncarBrand = 'Hyundai', carTitle = 'Hyundaaaai Cars'\n\n    @pytest.mark.parametrize(\"carBrand, carTitle\", dataProvider.get_data(\"NewCarsTest\"))\n    def test_printCarNamesAndPrices(self, carBrand, carTitle):\n        log.logger.info(\"******Inside Select Cars Test******\")\n        home = HomePage(self.driver)\n        car = CarBase(self.driver)\n    \n        print(\"Car brand is \", carBrand)\n        if carBrand == \"BMW\":\n            home.goToNewCars().selectBMW()\n            title = car.getCartTitle()\n            print(\"Car title is: \" + title)\n            assert title == carTitle, \"Not on the correct page as title is not matching\"\n            car.getCarNamesAndPrices()\n        # elif carBrand == \"Honda\":\n        #     home.goToNewCars().selectHonda()\n        #     title = car.getCartTitle()\n        #     print(\"Car title is: \" + title)\n        #     assert title == carTitle, \"Not on the correct page as title is not matching\"\n        #     car.getCarNamesAndPrices()\n        # elif carBrand == \"Toyota\":\n        #     home.goToNewCars().selectToyota()\n        #     title = car.getCartTitle()\n        #     print(\"Car title is: \" + title)\n        #     assert title == carTitle, \"Not on the correct page as title is not matching\"\n        #     car.getCarNamesAndPrices()\n        elif carBrand == \"Hyundai\":\n            home.goToNewCars().selectHyundai()\n            title = car.getCartTitle()\n            print(\"Car title is: \" + title)\n>           assert title == carTitle, \"Not on the correct page as title is not matching\"\nE           AssertionError: Not on the correct page as title is not matching\nE           assert 'Hyundai Cars' == 'Hyundaaaai Cars'\nE             - Hyundaaaai Cars\nE             ?       ---\nE             + Hyundai Cars\n\ntest_carwale.py:84: AssertionError"}, "attachments": [{"name": "log", "source": "b79bf65b-04f3-4c3c-ac1d-56c05e4848ed-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "get_browser", "value": "'firefox'"}, {"name": "carBrand", "value": "'Hyundai'"}, {"name": "carTitle", "value": "'Hyundaaaai Cars'"}], "start": 1645113660715, "stop": 1645113663108, "uuid": "b04452a4-c3b1-4ed9-9675-dc7b0e7068f4", "historyId": "eedd1e42c254c7ba6d9edcb68bf71db3", "testCaseId": "eea341a43e431cc2f1693040811c5c6c", "fullName": "test_carwale.Test_CarWale#test_printCarNamesAndPrices", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('log_on_failure', 'get_browser')"}, {"name": "suite", "value": "test_carwale"}, {"name": "subSuite", "value": "Test_CarWale"}, {"name": "host", "value": "CJLPT42"}, {"name": "thread", "value": "26112-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_carwale"}]}